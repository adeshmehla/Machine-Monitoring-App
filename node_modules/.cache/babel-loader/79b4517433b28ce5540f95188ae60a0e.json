{"ast":null,"code":"import _slicedToArray from \"E:/adesh/machine-maintence/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\adesh\\\\machine-maintence\\\\src\\\\component\\\\pages\\\\qr\\\\scanner.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { scannerData, mechanic_name } from '../../redux/pageSlice';\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Scanner = function Scanner(props) {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setfile = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    decodedValue = _useState4[0],\n    setDecodedValue = _useState4[1];\n  // const [data, setData] = useState(null);\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    scanResultWebCam = _useState6[0],\n    setScanResultWebCam = _useState6[1];\n  var dispatch = useDispatch();\n  var designation_type = useSelector(function (state) {\n    return state.pageReducer.degination_type;\n  });\n  var navigate = useNavigate('');\n  var fileRef = useRef();\n  // const fileRef = useRef(null);\n  var qrConfig = {\n    fps: 10,\n    qrbox: {\n      width: 300,\n      height: 300\n    }\n  };\n  var html5QrCode;\n  // const [cameraList, setCameraList] = useState([]);\n  // const [activeCamera, setActiveCamera] = useState();\n  useEffect(function () {\n    html5QrCode = new Html5Qrcode(\"reader\");\n    getCameras();\n    var oldRegion = document.getElementById(\"qr-shaded-region\");\n    oldRegion && oldRegion.remove();\n  }, []);\n  var handleClickAdvanced = function handleClickAdvanced() {\n    var qrCodeSuccessCallback = function qrCodeSuccessCallback(decodedText, decodedResult) {\n      console.info(decodedResult, decodedText);\n      props.onResult(decodedText);\n      // alert(`decoded:__ ${decodedText}`);\n      ////////////////////////////////////////////////////\n      fileRef.current.click();\n\n      // const jag = ['1','2','3'];\n      // const amit = ['4','5','6'];\n      // const sunin_pal = ['7','8'];\n      // const harkesh = ['9','10','11'];\n      // const mikail = ['12','13','14'];\n      // const nafish = ['15','38'];\n      // const jitendra = ['16','17'];\n      // const vasid = ['18','19','20'];\n      // const manoj = ['21','22','23'];\n      // const ram_mahesh = ['24','25','26','27'];\n      // const vikram = ['28','29','30',];\n      // const adil = ['31','32','33',];\n      // const yoginder = ['24','35','36',];\n      // const handleScaner=async (e)=>{\n      // const file = e.target.files[0];\n      // setfile(file);\n      // const result = await QrScanner.scanImage(file);\n      if (decodedText) {\n        // const b = result.split(\" \")[0]\n        if (file) {\n          localStorage.setItem('qr_scannerData', decodedText);\n        }\n        // setData(result.split(\"\"))\n        console.log(decodedText, \"+++++++++++white something saying\", JSON.parse(b).line_no);\n        // if(jag.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Jagvinder'))\n        // }\n        // else if(amit.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Amit'))\n        // }\n        // else if(sunin_pal.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Sunil Pal'))\n        // }\n        // else if(harkesh.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Harkesh'))\n        // }\n        // else if(mikail.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Mikail'))\n        // }\n        // else if(nafish.find(i=>i===JSON.parse(b).line_no)){\n        //     console.log('im her')\n        //     dispatch(mechanic_name('Nafish'))\n        // }\n        // else if(jitendra.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Jitendra'))\n        // }\n        // else if(vasid.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Vasid'))\n        // }\n        // else if(manoj.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Manoj'))\n        // }\n        // else if(ram_mahesh.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Ram Mahesh'))\n        // }\n        // else if(vikram.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Vikram'))\n        // }\n        // else if(adil.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Adil'))\n        // }\n        // else if(yoginder.find(i=>i===JSON.parse(b).line_no)){\n        //     dispatch(mechanic_name('Yoginder'))\n        // }\n        // else{\n        //     console.log('i am in else condition000000000000')\n        // }\n        dispatch(scannerData(decodedText));\n        console.log(designation_type, 'innn qrcode page');\n        if (designation_type === \"Machanic\") {\n          // navigate('/machanic')\n          navigate(\"/mechanic\", {\n            replace: true\n          });\n        } else {\n          navigate('/supervisor');\n        }\n      }\n    };\n    handleStop();\n    html5QrCode.start({\n      facingMode: \"environment\"\n    }, props.type === \"QR\" ? qrConfig : brConfig, qrCodeSuccessCallback).then(function () {\n      // const oldRegion = document.getElementById(\"qr-shaded-region\");\n      // if (oldRegion) oldRegion.innerHTML = \"\";\n    });\n  };\n  var getCameras = function getCameras() {\n    Html5Qrcode.getCameras().then(function (devices) {\n      /**\r\n       * devices would be an array of objects of type:\r\n       * { id: \"id\", label: \"label\" }\r\n       */\n      console.info(devices);\n      if (devices && devices.length) {\n        // setCameraList(devices);\n        // setActiveCamera(devices[0]);\n      }\n    }).catch(function (err) {\n      console.error(err);\n      // setCameraList([]);\n    });\n  };\n  // const onCameraChange = (e) => {\n  //   if (e.target.selectedIndex) {\n  //     let selectedCamera = e.target.options[e.target.selectedIndex];\n  //     console.info(selectedCamera);\n  //     let cameraId = selectedCamera.dataset.key;\n  //     setActiveCamera(cameraList.find((cam) => cam.id === cameraId));\n  //   }\n  // };\n  var handleStop = function handleStop() {\n    try {\n      html5QrCode.stop().then(function (res) {\n        html5QrCode.clear();\n      }).catch(function (err) {\n        console.log(err.message);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  // const scanLocalFile = () => {\n  //   fileRef.current.click();\n  // };\n  // const scanFile = (e) => {\n  //   if (e.target.files.length === 0) {\n  //     // No file selected, ignore\n  //     return;\n  //   }\n\n  //   // Use the first item in the list\n  //   const imageFile = e.target.files[0];\n  //   console.info(imageFile);\n  //   html5QrCode\n  //     .scanFile(imageFile, /* showImage= */ true)\n  //     .then((qrCodeMessage) => {\n  //       // success, use qrCodeMessage\n  //       console.log(qrCodeMessage);\n  //       props.onResult(qrCodeMessage);\n  //       html5QrCode.clear();\n  //     })\n  //     .catch((err) => {\n  //       // failure, handle it.\n  //       console.log(`Error scanning file. Reason: ${err}`);\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleClickAdvanced();\n      },\n      children: [\"click pro \", props.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleStop();\n      },\n      children: \"stop pro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 7\n  }, _this);\n};\n_s(Scanner, \"LEkOWPz5qHrK7fIVWvee83M33+w=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useEffect","useRef","useNavigate","useSelector","useDispatch","scannerData","mechanic_name","Html5Qrcode","Scanner","props","useState","file","setfile","decodedValue","setDecodedValue","scanResultWebCam","setScanResultWebCam","dispatch","designation_type","state","pageReducer","degination_type","navigate","fileRef","qrConfig","fps","qrbox","width","height","html5QrCode","getCameras","oldRegion","document","getElementById","remove","handleClickAdvanced","qrCodeSuccessCallback","decodedText","decodedResult","console","info","onResult","current","click","localStorage","setItem","log","JSON","parse","b","line_no","replace","handleStop","start","facingMode","type","brConfig","then","devices","length","catch","err","error","stop","res","clear","message","position"],"sources":["E:/adesh/machine-maintence/src/component/pages/qr/scanner.js"],"sourcesContent":["import React, {useEffect,useRef} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {scannerData,mechanic_name} from '../../redux/pageSlice'\r\nimport  {Html5Qrcode} from \"html5-qrcode\";\r\nexport const Scanner = (props) => {\r\n  const [file, setfile] = useState(null);\r\n    const [decodedValue, setDecodedValue] = useState(\"\");\r\n    // const [data, setData] = useState(null);\r\n    const[scanResultWebCam,setScanResultWebCam]=useState('')\r\n    const dispatch = useDispatch();\r\n    const designation_type = useSelector(state=>state.pageReducer.degination_type)\r\n    const navigate = useNavigate('');\r\n    const fileRef = useRef()\r\n    // const fileRef = useRef(null);\r\n    const qrConfig = { fps: 10, qrbox: { width: 300, height: 300 } };\r\n    let html5QrCode;\r\n    // const [cameraList, setCameraList] = useState([]);\r\n    // const [activeCamera, setActiveCamera] = useState();\r\n    useEffect(() => {\r\n      html5QrCode = new Html5Qrcode(\"reader\");\r\n      getCameras();\r\n      const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n      oldRegion && oldRegion.remove();\r\n    }, []);\r\n  \r\n    const handleClickAdvanced = () => {\r\n      const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n        console.info(decodedResult, decodedText);\r\n        props.onResult(decodedText);\r\n        // alert(`decoded:__ ${decodedText}`);\r\n        ////////////////////////////////////////////////////\r\n        fileRef.current.click();\r\n     \r\n      // const jag = ['1','2','3'];\r\n      // const amit = ['4','5','6'];\r\n      // const sunin_pal = ['7','8'];\r\n      // const harkesh = ['9','10','11'];\r\n      // const mikail = ['12','13','14'];\r\n      // const nafish = ['15','38'];\r\n      // const jitendra = ['16','17'];\r\n      // const vasid = ['18','19','20'];\r\n      // const manoj = ['21','22','23'];\r\n      // const ram_mahesh = ['24','25','26','27'];\r\n      // const vikram = ['28','29','30',];\r\n      // const adil = ['31','32','33',];\r\n      // const yoginder = ['24','35','36',];\r\n      // const handleScaner=async (e)=>{\r\n          // const file = e.target.files[0];\r\n          // setfile(file);\r\n          // const result = await QrScanner.scanImage(file);\r\n          if(decodedText){\r\n              // const b = result.split(\" \")[0]\r\n              if(file){\r\n                  localStorage.setItem('qr_scannerData',decodedText)\r\n              }\r\n              // setData(result.split(\"\"))\r\n              console.log(decodedText,\"+++++++++++white something saying\",JSON.parse(b).line_no)\r\n              // if(jag.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Jagvinder'))\r\n              // }\r\n              // else if(amit.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Amit'))\r\n              // }\r\n              // else if(sunin_pal.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Sunil Pal'))\r\n              // }\r\n              // else if(harkesh.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Harkesh'))\r\n              // }\r\n              // else if(mikail.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Mikail'))\r\n              // }\r\n              // else if(nafish.find(i=>i===JSON.parse(b).line_no)){\r\n              //     console.log('im her')\r\n              //     dispatch(mechanic_name('Nafish'))\r\n              // }\r\n              // else if(jitendra.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Jitendra'))\r\n              // }\r\n              // else if(vasid.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Vasid'))\r\n              // }\r\n              // else if(manoj.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Manoj'))\r\n              // }\r\n              // else if(ram_mahesh.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Ram Mahesh'))\r\n              // }\r\n              // else if(vikram.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Vikram'))\r\n              // }\r\n              // else if(adil.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Adil'))\r\n              // }\r\n              // else if(yoginder.find(i=>i===JSON.parse(b).line_no)){\r\n              //     dispatch(mechanic_name('Yoginder'))\r\n              // }\r\n              // else{\r\n              //     console.log('i am in else condition000000000000')\r\n              // }\r\n              dispatch(scannerData(decodedText));\r\n              console.log(designation_type,'innn qrcode page')\r\n              if(designation_type===\"Machanic\"){\r\n                  // navigate('/machanic')\r\n                  navigate(\"/mechanic\", { replace: true });\r\n              }else{\r\n                  navigate('/supervisor')\r\n              }\r\n  \r\n          }\r\n        };\r\n        handleStop();\r\n      html5QrCode\r\n        .start(\r\n          { facingMode: \"environment\" },\r\n          props.type === \"QR\" ? qrConfig : brConfig,\r\n          qrCodeSuccessCallback\r\n        )\r\n        .then(() => {\r\n          // const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n          // if (oldRegion) oldRegion.innerHTML = \"\";\r\n        });\r\n    };\r\n    const getCameras = () => {\r\n      Html5Qrcode.getCameras()\r\n        .then((devices) => {\r\n          /**\r\n           * devices would be an array of objects of type:\r\n           * { id: \"id\", label: \"label\" }\r\n           */\r\n          console.info(devices);\r\n          if (devices && devices.length) {\r\n            // setCameraList(devices);\r\n            // setActiveCamera(devices[0]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          // setCameraList([]);\r\n        });\r\n    };\r\n    // const onCameraChange = (e) => {\r\n    //   if (e.target.selectedIndex) {\r\n    //     let selectedCamera = e.target.options[e.target.selectedIndex];\r\n    //     console.info(selectedCamera);\r\n    //     let cameraId = selectedCamera.dataset.key;\r\n    //     setActiveCamera(cameraList.find((cam) => cam.id === cameraId));\r\n    //   }\r\n    // };\r\n    const handleStop = () => {\r\n      try {\r\n        html5QrCode\r\n          .stop()\r\n          .then((res) => {\r\n            html5QrCode.clear();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    // const scanLocalFile = () => {\r\n    //   fileRef.current.click();\r\n    // };\r\n    // const scanFile = (e) => {\r\n    //   if (e.target.files.length === 0) {\r\n    //     // No file selected, ignore\r\n    //     return;\r\n    //   }\r\n  \r\n    //   // Use the first item in the list\r\n    //   const imageFile = e.target.files[0];\r\n    //   console.info(imageFile);\r\n    //   html5QrCode\r\n    //     .scanFile(imageFile, /* showImage= */ true)\r\n    //     .then((qrCodeMessage) => {\r\n    //       // success, use qrCodeMessage\r\n    //       console.log(qrCodeMessage);\r\n    //       props.onResult(qrCodeMessage);\r\n    //       html5QrCode.clear();\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       // failure, handle it.\r\n    //       console.log(`Error scanning file. Reason: ${err}`);\r\n    //     });\r\n    // };\r\n  \r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        <div id=\"reader\" width=\"100%\"></div>\r\n        {/* <button onClick={getCameras}>Get List of cameras</button>\r\n        {cameraList.length > 0 && (\r\n          <select onChange={onCameraChange}>\r\n            {cameraList.map((li) => (\r\n              <option\r\n                key={li.id}\r\n                id={li.id}\r\n                selected={activeCamera && activeCamera.id === li.id}\r\n              >\r\n                {li.label}\r\n              </option>\r\n            ))}\r\n            <option>Dummy</option>\r\n          </select>\r\n        )} */}\r\n        <button onClick={() => handleClickAdvanced()}>\r\n          click pro {props.type}\r\n        </button>\r\n        <button onClick={() => handleStop()}>stop pro</button>\r\n        <br />\r\n        <br />\r\n        {/* <button onClick={scanLocalFile}>Scan local file</button> */}\r\n        {/* <input\r\n          type=\"file\"\r\n          hidden\r\n          ref={fileRef}\r\n          accept=\"image/*\"\r\n          onChange={scanFile}\r\n        /> */}\r\n      </div>\r\n    );\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}