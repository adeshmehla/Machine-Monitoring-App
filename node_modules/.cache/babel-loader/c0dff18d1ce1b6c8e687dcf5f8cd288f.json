{"ast":null,"code":"import _slicedToArray from \"E:/adesh/Pardeep sir projects/machine-maintence/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\adesh\\\\Pardeep sir projects\\\\machine-maintence\\\\react-app\\\\src\\\\component\\\\pages\\\\qr\\\\scanner.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// import React, {useEffect,useState,useRef} from \"react\";\n// import { Button } from 'antd';\n// import { Html5Qrcode } from \"html5-qrcode\";\n// import { useNavigate } from 'react-router-dom';\n// import {useSelector,useDispatch} from 'react-redux';\n// import {scannerData,mechanic_name} from '../../redux/pageSlice'\n// import styles from './pageStyle.module.css'\n// export const Scanner = () => {\n//   const[cameraStart,setCameraStart]=useState(false);\n//     const dispatch = useDispatch();\n//     const designation_type = useSelector(state=>state.pageReducer.degination_type)\n//     const navigate = useNavigate('');\n//     const qrConfig = { fps: 10, qrbox: { width: 300, height: 300 } };\n//     let html5QrCode;\n\n//     useEffect(() => {\n//       html5QrCode = new Html5Qrcode(\"reader\");\n//       getCameras();\n//       const oldRegion = document.getElementById(\"qr-shaded-region\");\n//       oldRegion && oldRegion.remove();\n//     }, []);\n\n//     // const handleClickAdvanced = () => {\n//     //   console.log(html5QrCode,'ppppppppppppppppppppp'),\n//     //   setCameraStart(true)\n//     //   const qrCodeSuccessCallback = (decodedText, decodedResult) => {\n//     //     let v= JSON.parse(JSON.stringify(decodedText));\n//     //     const b = JSON.parse(v)\n//     //           dispatch(scannerData(b));\n//     //           console.log(designation_type,'innn qrcode page')\n//     //           if(designation_type===\"Machanic\"){\n//     //               navigate(\"/mechanic\", { replace: true });\n//     //           }else{\n//     //               navigate('/mechanic')\n//     //           }  \n//     //       handleStop();\n//     //     };\n//     //   html5QrCode\n//     //     .start(\n\n//     //       { facingMode: \"environment\" },\n//     //        qrConfig,\n//     //       qrCodeSuccessCallback\n//     //     )\n//     //     .then(() => {\n//     //     });\n//     // };\n\n//     const handleClickAdvanced = () => {\n//       const qrCodeSuccessCallback = (decodedText, decodedResult) => {\n//         console.info(decodedResult, decodedText);\n\n//         let v= JSON.parse(JSON.stringify(decodedText));\n//         const b = JSON.parse(v)\n//               dispatch(scannerData(b));\n\n//         handleStop();\n//       };\n//       html5QrCode\n//         .start(\n//           { facingMode: \"environment\" },\n//          qrConfig,\n//           qrCodeSuccessCallback\n//         )\n//         .then(() => {\n//           navigate('/mechanic')\n//         });\n//     };\n\n//     const getCameras = () => {\n//       Html5Qrcode.getCameras()\n//         .then((devices) => {\n//           /**\n//            * devices would be an array of objects of type:\n//            * { id: \"id\", label: \"label\" }\n//            */\n//           console.info(devices);\n//           if (devices && devices.length) {\n//             // setCameraList(devices);\n//             setActiveCamera(devices[0]);\n//           }\n//         })\n//         .catch((err) => {\n//           console.error(err);\n//           setCameraList([]);\n//         });\n//     };\n\n//     const handleStop = () => {\n//       try {\n//         html5QrCode\n//           .stop()\n//           .then((res) => {\n//             html5QrCode.clear();\n//           })\n//           .catch((err) => {\n//             console.log(err.message);\n//           });\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     };\n\n//     return (\n//       <div style={{ position: \"relative\" }}>\n//         <div id=\"reader\" width=\"100%\"></div>\n//          <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\n//       <h1>Scan your qr code</h1>\n//       {!cameraStart?<Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\n//           scan machine\n//         </Button>:null}\n//        {cameraStart?\n//        <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button>\n//        :null}\n\n//         </div>\n//       </div>\n//     );\n//   };\n\n///////////////////////////////////////////////////////////////\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport styles from './pageStyle.module.css';\nimport { Button } from 'antd';\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { scannerData, mechanic_name } from '../../redux/pageSlice';\n// import { getCameraList } from \"./Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar qrConfig = {\n  fps: 10,\n  qrbox: {\n    width: 350,\n    height: 400\n  }\n};\nvar html5QrCode;\n\n// function startCamera(){}\n\nexport var Scanner = function Scanner(props) {\n  _s();\n  var fileRef = useRef(null);\n  var navigate = useNavigate();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cameraList = _useState2[0],\n    setCameraList = _useState2[1];\n  var dispatch = useDispatch();\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeCamera = _useState4[0],\n    setActiveCamera = _useState4[1];\n  useEffect(function () {\n    html5QrCode = new Html5Qrcode(\"reader\");\n    getCameras();\n    var oldRegion = document.getElementById(\"qr-shaded-region\");\n    oldRegion && oldRegion.remove();\n    // props.setLoading(false);\n    handleClickAdvanced();\n  }, []);\n  var handleClickAdvanced = function handleClickAdvanced() {\n    var qrCodeSuccessCallback = function qrCodeSuccessCallback(decodedText, decodedResult) {\n      var v = JSON.parse(JSON.stringify(decodedText));\n      var b = JSON.parse(v);\n      dispatch(scannerData(b));\n      navigate('/mechanic');\n      handleStop();\n    };\n    html5QrCode.start({\n      facingMode: \"environment\"\n    }, qrConfig, qrCodeSuccessCallback).then(function () {\n      // const oldRegion = document.getElementById(\"qr-shaded-region\");\n      // if (oldRegion) oldRegion.innerHTML = \"\";\n    });\n  };\n  var getCameras = function getCameras() {\n    Html5Qrcode.getCameras().then(function (devices) {\n      /**\r\n       * devices would be an array of objects of type:\r\n       * { id: \"id\", label: \"label\" }\r\n       */\n      console.info(devices);\n      if (devices && devices.length) {\n        setCameraList(devices);\n        setActiveCamera(devices[0]);\n      }\n    }).catch(function (err) {\n      console.error(err);\n      setCameraList([]);\n    });\n  };\n  // const onCameraChange = (e) => {\n  //   if (e.target.selectedIndex) {\n  //     let selectedCamera = e.target.options[e.target.selectedIndex];\n  //     console.info(selectedCamera);\n  //     let cameraId = selectedCamera.dataset.key;\n  //     setActiveCamera(cameraList.find((cam) => cam.id === cameraId));\n  //   }\n  // };\n  var handleStop = function handleStop() {\n    try {\n      html5QrCode.stop().then(function (res) {\n        html5QrCode.clear();\n      }).catch(function (err) {\n        console.log(err.message);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  var scanLocalFile = function scanLocalFile() {\n    fileRef.current.click();\n  };\n  var scanFile = function scanFile(e) {\n    if (e.target.files.length === 0) {\n      // No file selected, ignore\n      return;\n    }\n\n    // Use the first item in the list\n    var imageFile = e.target.files[0];\n    console.info(imageFile);\n    html5QrCode.scanFile(imageFile, /* showImage= */true).then(function (qrCodeMessage) {\n      // success, use qrCodeMessage\n      console.log(qrCodeMessage, 'ppoooooo');\n      html5QrCode.clear();\n    }).catch(function (err) {\n      // failure, handle it.\n      console.log(\"Error scanning file. Reason: \".concat(err));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"whitesmoke\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scan your qr code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 3\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 6\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, _this);\n};\n\n//   <div style={{ position: \"relative\" }}>\n//   <div id=\"reader\" width=\"100%\"></div>\n//    <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\n// <h1>Scan your qr code</h1>\n// {!cameraStart?<Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\n//     scan machine\n//   </Button>:null}\n//  {cameraStart?\n//  <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button>\n//  :null}\n\n//   </div>\n// </div>\n_s(Scanner, \"Dl44TA3q+ZZrdFeOSJglxuDXg2E=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styles","Button","Html5Qrcode","useNavigate","useDispatch","scannerData","mechanic_name","qrConfig","fps","qrbox","width","height","html5QrCode","Scanner","props","fileRef","navigate","cameraList","setCameraList","dispatch","activeCamera","setActiveCamera","getCameras","oldRegion","document","getElementById","remove","handleClickAdvanced","qrCodeSuccessCallback","decodedText","decodedResult","v","JSON","parse","stringify","b","handleStop","start","facingMode","then","devices","console","info","length","catch","err","error","stop","res","clear","log","message","scanLocalFile","current","click","scanFile","e","target","files","imageFile","qrCodeMessage","position","backgroundColor","textAlign"],"sources":["E:/adesh/Pardeep sir projects/machine-maintence/react-app/src/component/pages/qr/scanner.js"],"sourcesContent":["// import React, {useEffect,useState,useRef} from \"react\";\r\n// import { Button } from 'antd';\r\n// import { Html5Qrcode } from \"html5-qrcode\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {useSelector,useDispatch} from 'react-redux';\r\n// import {scannerData,mechanic_name} from '../../redux/pageSlice'\r\n// import styles from './pageStyle.module.css'\r\n// export const Scanner = () => {\r\n//   const[cameraStart,setCameraStart]=useState(false);\r\n//     const dispatch = useDispatch();\r\n//     const designation_type = useSelector(state=>state.pageReducer.degination_type)\r\n//     const navigate = useNavigate('');\r\n//     const qrConfig = { fps: 10, qrbox: { width: 300, height: 300 } };\r\n//     let html5QrCode;\r\n\r\n//     useEffect(() => {\r\n//       html5QrCode = new Html5Qrcode(\"reader\");\r\n//       getCameras();\r\n//       const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n//       oldRegion && oldRegion.remove();\r\n//     }, []);\r\n  \r\n//     // const handleClickAdvanced = () => {\r\n//     //   console.log(html5QrCode,'ppppppppppppppppppppp'),\r\n//     //   setCameraStart(true)\r\n//     //   const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n//     //     let v= JSON.parse(JSON.stringify(decodedText));\r\n//     //     const b = JSON.parse(v)\r\n//     //           dispatch(scannerData(b));\r\n//     //           console.log(designation_type,'innn qrcode page')\r\n//     //           if(designation_type===\"Machanic\"){\r\n//     //               navigate(\"/mechanic\", { replace: true });\r\n//     //           }else{\r\n//     //               navigate('/mechanic')\r\n//     //           }  \r\n//     //       handleStop();\r\n//     //     };\r\n//     //   html5QrCode\r\n//     //     .start(\r\n         \r\n//     //       { facingMode: \"environment\" },\r\n//     //        qrConfig,\r\n//     //       qrCodeSuccessCallback\r\n//     //     )\r\n//     //     .then(() => {\r\n//     //     });\r\n//     // };\r\n\r\n//     const handleClickAdvanced = () => {\r\n//       const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n//         console.info(decodedResult, decodedText);\r\n       \r\n//         let v= JSON.parse(JSON.stringify(decodedText));\r\n//         const b = JSON.parse(v)\r\n//               dispatch(scannerData(b));\r\n\r\n//         handleStop();\r\n//       };\r\n//       html5QrCode\r\n//         .start(\r\n//           { facingMode: \"environment\" },\r\n//          qrConfig,\r\n//           qrCodeSuccessCallback\r\n//         )\r\n//         .then(() => {\r\n//           navigate('/mechanic')\r\n//         });\r\n//     };\r\n\r\n\r\n\r\n\r\n//     const getCameras = () => {\r\n//       Html5Qrcode.getCameras()\r\n//         .then((devices) => {\r\n//           /**\r\n//            * devices would be an array of objects of type:\r\n//            * { id: \"id\", label: \"label\" }\r\n//            */\r\n//           console.info(devices);\r\n//           if (devices && devices.length) {\r\n//             // setCameraList(devices);\r\n//             setActiveCamera(devices[0]);\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           console.error(err);\r\n//           setCameraList([]);\r\n//         });\r\n//     };\r\n   \r\n//     const handleStop = () => {\r\n//       try {\r\n//         html5QrCode\r\n//           .stop()\r\n//           .then((res) => {\r\n//             html5QrCode.clear();\r\n//           })\r\n//           .catch((err) => {\r\n//             console.log(err.message);\r\n//           });\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     };\r\n\r\n//     return (\r\n//       <div style={{ position: \"relative\" }}>\r\n//         <div id=\"reader\" width=\"100%\"></div>\r\n//          <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\r\n//       <h1>Scan your qr code</h1>\r\n//       {!cameraStart?<Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\r\n//           scan machine\r\n//         </Button>:null}\r\n//        {cameraStart?\r\n//        <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button>\r\n//        :null}\r\n      \r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  import React, { useEffect, useState, useRef } from \"react\";\r\nimport styles from './pageStyle.module.css'\r\nimport {Button} from 'antd'\r\nimport { Html5Qrcode } from \"html5-qrcode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {scannerData,mechanic_name} from '../../redux/pageSlice'\r\n// import { getCameraList } from \"./Utils\";\r\n\r\nconst qrConfig = { fps: 10, qrbox: { width: 350, height: 400 } };\r\nlet html5QrCode;\r\n\r\n// function startCamera(){}\r\n\r\nexport const Scanner = (props) => {\r\n  const fileRef = useRef(null);\r\n\r\n  const navigate = useNavigate()\r\n  const [cameraList, setCameraList] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [activeCamera, setActiveCamera] = useState();\r\n  useEffect(() => {\r\n    html5QrCode = new Html5Qrcode(\"reader\");\r\n    getCameras();\r\n    const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n    oldRegion && oldRegion.remove();\r\n    // props.setLoading(false);\r\n    handleClickAdvanced()\r\n  },[]);\r\n\r\n  const handleClickAdvanced = () => {\r\n    const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n      let v= JSON.parse(JSON.stringify(decodedText));\r\n              const b = JSON.parse(v)\r\n      dispatch(scannerData(b));\r\n      navigate('/mechanic')\r\n      handleStop();\r\n    };\r\n    html5QrCode\r\n      .start(\r\n        { facingMode: \"environment\" },\r\n      qrConfig,\r\n        qrCodeSuccessCallback\r\n      )\r\n      .then(() => {\r\n        // const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n        // if (oldRegion) oldRegion.innerHTML = \"\";\r\n      });\r\n  };\r\n  const getCameras = () => {\r\n    Html5Qrcode.getCameras()\r\n      .then((devices) => {\r\n        /**\r\n         * devices would be an array of objects of type:\r\n         * { id: \"id\", label: \"label\" }\r\n         */\r\n        console.info(devices);\r\n        if (devices && devices.length) {\r\n          setCameraList(devices);\r\n          setActiveCamera(devices[0]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setCameraList([]);\r\n      });\r\n  };\r\n  // const onCameraChange = (e) => {\r\n  //   if (e.target.selectedIndex) {\r\n  //     let selectedCamera = e.target.options[e.target.selectedIndex];\r\n  //     console.info(selectedCamera);\r\n  //     let cameraId = selectedCamera.dataset.key;\r\n  //     setActiveCamera(cameraList.find((cam) => cam.id === cameraId));\r\n  //   }\r\n  // };\r\n  const handleStop = () => {\r\n    try {\r\n      html5QrCode\r\n        .stop()\r\n        .then((res) => {\r\n          html5QrCode.clear();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const scanLocalFile = () => {\r\n    fileRef.current.click();\r\n  };\r\n  const scanFile = (e) => {\r\n    if (e.target.files.length === 0) {\r\n      // No file selected, ignore\r\n      return;\r\n    }\r\n\r\n    // Use the first item in the list\r\n    const imageFile = e.target.files[0];\r\n    console.info(imageFile);\r\n    html5QrCode\r\n      .scanFile(imageFile, /* showImage= */ true)\r\n      .then((qrCodeMessage) => {\r\n        // success, use qrCodeMessage\r\n        console.log(qrCodeMessage,'ppoooooo');\r\n        html5QrCode.clear();\r\n      })\r\n      .catch((err) => {\r\n        // failure, handle it.\r\n        console.log(`Error scanning file. Reason: ${err}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n    <div id=\"reader\" width=\"100%\"></div>\r\n     <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\r\n  <h1>Scan your qr code</h1>\r\n  {/* <Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\r\n      scan machine\r\n    </Button>\r\n  \r\n   <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button> */}\r\n  \r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   <div style={{ position: \"relative\" }}>\r\n//   <div id=\"reader\" width=\"100%\"></div>\r\n//    <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\r\n// <h1>Scan your qr code</h1>\r\n// {!cameraStart?<Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\r\n//     scan machine\r\n//   </Button>:null}\r\n//  {cameraStart?\r\n//  <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button>\r\n//  :null}\r\n\r\n//   </div>\r\n// </div>\r\n\r\n\r\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA;;AAIE,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC5D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAAQC,MAAM,QAAO,MAAM;AAC3B,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,WAAW,EAACC,aAAa,QAAO,uBAAuB;AAC/D;AAAA;AAEA,IAAMC,QAAQ,GAAG;EAAEC,GAAG,EAAE,EAAE;EAAEC,KAAK,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI;AAAE,CAAC;AAChE,IAAIC,WAAW;;AAEf;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAIC,KAAK,EAAK;EAAA;EAChC,IAAMC,OAAO,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE5B,IAAMiB,QAAQ,GAAGb,WAAW,EAAE;EAC9B,gBAAoCL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCmB,UAAU;IAAEC,aAAa;EAChC,IAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,iBAAwCN,QAAQ,EAAE;IAAA;IAA3CsB,YAAY;IAAEC,eAAe;EACpCxB,SAAS,CAAC,YAAM;IACde,WAAW,GAAG,IAAIV,WAAW,CAAC,QAAQ,CAAC;IACvCoB,UAAU,EAAE;IACZ,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAC7DF,SAAS,IAAIA,SAAS,CAACG,MAAM,EAAE;IAC/B;IACAC,mBAAmB,EAAE;EACvB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;IAChC,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIC,WAAW,EAAEC,aAAa,EAAK;MAC5D,IAAIC,CAAC,GAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,WAAW,CAAC,CAAC;MACtC,IAAMM,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC;MAC/BZ,QAAQ,CAACd,WAAW,CAAC8B,CAAC,CAAC,CAAC;MACxBnB,QAAQ,CAAC,WAAW,CAAC;MACrBoB,UAAU,EAAE;IACd,CAAC;IACDxB,WAAW,CACRyB,KAAK,CACJ;MAAEC,UAAU,EAAE;IAAc,CAAC,EAC/B/B,QAAQ,EACNqB,qBAAqB,CACtB,CACAW,IAAI,CAAC,YAAM;MACV;MACA;IAAA,CACD,CAAC;EACN,CAAC;EACD,IAAMjB,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvBpB,WAAW,CAACoB,UAAU,EAAE,CACrBiB,IAAI,CAAC,UAACC,OAAO,EAAK;MACjB;AACR;AACA;AACA;MACQC,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;MACrB,IAAIA,OAAO,IAAIA,OAAO,CAACG,MAAM,EAAE;QAC7BzB,aAAa,CAACsB,OAAO,CAAC;QACtBnB,eAAe,CAACmB,OAAO,CAAC,CAAC,CAAC,CAAC;MAC7B;IACF,CAAC,CAAC,CACDI,KAAK,CAAC,UAACC,GAAG,EAAK;MACdJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;MAClB3B,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMkB,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAI;MACFxB,WAAW,CACRmC,IAAI,EAAE,CACNR,IAAI,CAAC,UAACS,GAAG,EAAK;QACbpC,WAAW,CAACqC,KAAK,EAAE;MACrB,CAAC,CAAC,CACDL,KAAK,CAAC,UAACC,GAAG,EAAK;QACdJ,OAAO,CAACS,GAAG,CAACL,GAAG,CAACM,OAAO,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC,OAAON,GAAG,EAAE;MACZJ,OAAO,CAACS,GAAG,CAACL,GAAG,CAAC;IAClB;EACF,CAAC;EACD,IAAMO,aAAa,GAAG,SAAhBA,aAAa,GAAS;IAC1BrC,OAAO,CAACsC,OAAO,CAACC,KAAK,EAAE;EACzB,CAAC;EACD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,CAAC,EAAK;IACtB,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACf,MAAM,KAAK,CAAC,EAAE;MAC/B;MACA;IACF;;IAEA;IACA,IAAMgB,SAAS,GAAGH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnCjB,OAAO,CAACC,IAAI,CAACiB,SAAS,CAAC;IACvB/C,WAAW,CACR2C,QAAQ,CAACI,SAAS,EAAE,gBAAiB,IAAI,CAAC,CAC1CpB,IAAI,CAAC,UAACqB,aAAa,EAAK;MACvB;MACAnB,OAAO,CAACS,GAAG,CAACU,aAAa,EAAC,UAAU,CAAC;MACrChD,WAAW,CAACqC,KAAK,EAAE;IACrB,CAAC,CAAC,CACDL,KAAK,CAAC,UAACC,GAAG,EAAK;MACd;MACAJ,OAAO,CAACS,GAAG,wCAAiCL,GAAG,EAAG;IACpD,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEgB,QAAQ,EAAE;IAAW,CAAE;IAAA,wBACrC;MAAK,EAAE,EAAC,QAAQ;MAAC,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,SAAO,eACnC;MAAK,KAAK,EAAE;QAACC,eAAe,EAAC,YAAY;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAA,uBACjE;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,SAOlB;EAAA;IAAA;IAAA;IAAA;EAAA,SACF;AAER,CAAC;;AA0BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,GAxJalD,OAAO;EAAA,QAGDV,WAAW,EAEXC,WAAW;AAAA;AAAA,KALjBS,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}