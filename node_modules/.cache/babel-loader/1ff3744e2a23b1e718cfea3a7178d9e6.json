{"ast":null,"code":"import _regeneratorRuntime from \"E:/adesh/Pardeep sir projects/machine-maintence/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/adesh/Pardeep sir projects/machine-maintence/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"E:/adesh/Pardeep sir projects/machine-maintence/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\adesh\\\\Pardeep sir projects\\\\machine-maintence\\\\react-app\\\\src\\\\component\\\\pages\\\\managerPages\\\\inventory\\\\partIssue.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Select, Input } from 'antd';\nimport axios from 'axios';\nimport { PartScanner } from './partScanner';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Option = Select.Option;\nvar layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport var PartIssue = function PartIssue() {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    updateRow = _useState2[0],\n    setUpdateRow = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showUpdateButton = _useState4[0],\n    setShowUpdateButton = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    apiData = _useState6[0],\n    setApiData = _useState6[1];\n  //  const navigate = useNavigate()\n  var _Form$useForm = Form.useForm(),\n    _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n    form = _Form$useForm2[0];\n  var onMechanicChange = function onMechanicChange(value) {\n    console.log(value);\n  };\n  useEffect(function () {\n    axios.get('http://localhost:5000/api/tool_table').then(function (res) {\n      return setApiData(res.data);\n    });\n\n    // console.log(data,'data data data')\n    // console.log(postData,'kkkkkkkkkkkkkkkkkkkkkk')\n  }, []);\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(values) {\n      var datas, _yield$Promise$all, _yield$Promise$all2, firstResponse, secondResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log(values, 'onFinish');\n            // const updateRow = apiData.filter(i=>i.item_code==values.item_code)\n            console.log(updateRow, 'updateRow');\n            values.last_received_date = moment().format('YYYY-MM-DD hh:mm:ss');\n            values.cost = 3000;\n            values.category = \"power\";\n            values.part_name = \"oilgear\";\n            datas = {\n              // id:updateRow[0].id,    \n              stock_balance: values.stock_balance,\n              for_machine: values.for_machine,\n              part_code: values.part_code,\n              part_description: values.part_description,\n              last_received_date: values.last_received_date,\n              cost: values.cost,\n              category: values.category,\n              part_name: values.part_name\n            };\n            _context.prev = 7;\n            _context.next = 10;\n            return Promise.all([axios.post('http://localhost:5000/api/issueParts', datas), axios.put(\"http://localhost:5000/api/updatePartsDb\", {\n              id: updateRow[0].id,\n              part_quantity: updateRow[0].part_quantity - values.stock_balance\n            })]);\n          case 10:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            firstResponse = _yield$Promise$all2[0];\n            secondResponse = _yield$Promise$all2[1];\n            _context.next = 19;\n            break;\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](7);\n            console.log(_context.t0);\n          case 19:\n            setShowUpdateButton(function (preState) {\n              return !preState;\n            });\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[7, 16]]);\n    }));\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onReset = function onReset() {\n    form.resetFields();\n  };\n  var onFill = function onFill() {\n    form.setFieldsValue({\n      note: 'Hello world!',\n      gender: 'male'\n    });\n  };\n  var handleIssuePart = function handleIssuePart() {\n    setShowUpdateButton(function (preState) {\n      return !preState;\n    });\n  };\n  var handleItemCodeChange = function handleItemCodeChange(e) {\n    // console.log(apiData.filter(i=>i.part_code),'hello')\n    console.log(apiData.filter(function (i) {\n      return i.part_code == e.target.value;\n    }), 'hello');\n    setUpdateRow(apiData.filter(function (i) {\n      return i.part_code == e.target.value;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        width: \"50%\",\n        marginTop: \"3%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Update Parts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }, _this), showUpdateButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid red\",\n          marginBottom: \"5%\",\n          width: \"400px\",\n          height: \"300px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleIssuePart,\n          style: {\n            width: \"50%\",\n            height: \"50px\",\n            position: \"relative\",\n            top: \"132px\",\n            left: \"106px\"\n          },\n          children: \"Add Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, _this), !showUpdateButton && /*#__PURE__*/_jsxDEV(PartScanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 2\n      }, _this)\n      //    <Form\n      // {...layout}\n      // form={form}\n      // name=\"control-hooks\"\n      // onFinish={onFinish}\n      // style={{ maxWidth: 600 }}\n      // >\n\n      // <Form.Item name=\"part_code\" onChange={handleItemCodeChange} label=\"Item Code\" rules={[{ required: true }]}>\n      //   <Input/>\n      // </Form.Item>\n      // <Form.Item name=\"part_description\" label=\"Item Description\" rules={[{ required: true }]}>\n      //   <Input/>\n      // </Form.Item>\n      // <Form.Item name=\"stock_balance\" label=\"Quantity\" rules={[{ required: true }]}>\n      //   <Input type='number'/>\n      // </Form.Item>\n      // <Form.Item name=\"mechanic_name\" label=\"mechanic_name\" rules={[{ required: true }]}>\n      //   <Select\n      //     onChange={onMechanicChange}\n      //     allowClear\n      //     >\n      //     {apiData.map(i=><Option value={i.id}>{i.mechanic_name}</Option> )}\n      //   </Select>\n      // </Form.Item>\n      // <Form.Item name=\"for_machine\" label=\"Machine Number\" rules={[{ required: true }]}>\n      // <Input/>\n      // </Form.Item>\n\n      // <Form.Item {...tailLayout}>\n      //   <Button   type=\"primary\" htmlType=\"submit\">\n      //     Update\n      //   </Button>\n      // </Form.Item>\n      // </Form>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n_s(PartIssue, \"0xDmv6Vf3K9y/APqMvI9doyIlzI=\", false, function () {\n  return [Form.useForm];\n});\n_c = PartIssue;\nvar _c;\n$RefreshReg$(_c, \"PartIssue\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Select","Input","axios","PartScanner","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","PartIssue","updateRow","setUpdateRow","showUpdateButton","setShowUpdateButton","apiData","setApiData","useForm","form","onMechanicChange","value","console","log","get","then","res","data","onFinish","values","last_received_date","moment","format","cost","category","part_name","datas","stock_balance","for_machine","part_code","part_description","Promise","all","post","put","id","part_quantity","firstResponse","secondResponse","preState","onReset","resetFields","onFill","setFieldsValue","note","gender","handleIssuePart","handleItemCodeChange","e","filter","i","target","margin","width","marginTop","textAlign","border","marginBottom","height","position","top","left"],"sources":["E:/adesh/Pardeep sir projects/machine-maintence/react-app/src/component/pages/managerPages/inventory/partIssue.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { Button, Form, Select,Input } from 'antd';\r\nimport axios from 'axios';\r\nimport { PartScanner } from './partScanner';\r\n// import { useNavigate } from 'react-router-dom';\r\nconst { Option } = Select;\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\nexport const PartIssue = () => {\r\n  const[updateRow,setUpdateRow]=useState(null);\r\n  const[showUpdateButton,setShowUpdateButton]=useState(true);\r\n   const[apiData,setApiData]=useState([]);\r\n  //  const navigate = useNavigate()\r\n   const [form] = Form.useForm();\r\n   const onMechanicChange = (value) => {\r\n    console.log(value)\r\n  };\r\n  useEffect(()=>{\r\n    axios.get('http://localhost:5000/api/tool_table').then(res=>setApiData(res.data))\r\n    \r\n    // console.log(data,'data data data')\r\n    // console.log(postData,'kkkkkkkkkkkkkkkkkkkkkk')\r\n  },[])\r\n  const onFinish = async(values) => {\r\n    console.log(values,'onFinish')\r\n    // const updateRow = apiData.filter(i=>i.item_code==values.item_code)\r\n    console.log(updateRow,'updateRow')\r\n    values.last_received_date = moment().format('YYYY-MM-DD hh:mm:ss')\r\n    values.cost = 3000\r\n    values.category = \"power\"\r\n    values.part_name = \"oilgear\"\r\n    let datas ={\r\n      // id:updateRow[0].id,    \r\n      stock_balance:values.stock_balance,          \r\n      for_machine:values.for_machine,          \r\n      part_code:values.part_code,          \r\n      part_description:values.part_description,      \r\n      last_received_date:values.last_received_date,      \r\n      cost:values.cost,      \r\n      category:values.category,      \r\n      part_name:values.part_name,      \r\n    }\r\n    try {\r\n      const [firstResponse, secondResponse] = await Promise.all([\r\n        axios.post('http://localhost:5000/api/issueParts', datas),\r\n        axios.put(`http://localhost:5000/api/updatePartsDb`,{\r\n          id: updateRow[0].id,\r\n          part_quantity: updateRow[0].part_quantity-values.stock_balance,        \r\n        })\r\n      ]);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setShowUpdateButton(preState=>!preState)\r\n  };\r\n    const onReset = () => {\r\n      form.resetFields();\r\n    };\r\n    const onFill = () => {\r\n      form.setFieldsValue({\r\n        note: 'Hello world!',\r\n        gender: 'male',\r\n      });\r\n    };\r\n\r\n\r\nconst handleIssuePart =()=>{\r\n  setShowUpdateButton(preState=>!preState) \r\n}\r\nconst handleItemCodeChange=(e)=>{\r\n  \r\n  // console.log(apiData.filter(i=>i.part_code),'hello')\r\n  console.log(apiData.filter(i=>i.part_code==e.target.value),'hello')\r\n  setUpdateRow(apiData.filter(i=>i.part_code==e.target.value))\r\n}\r\n  return (\r\n   <>\r\n   <div style={{margin:\"auto\",width:\"50%\",marginTop:\"3%\"}}>\r\n     <h2 style={{textAlign:\"center\"}}>Update Parts</h2>\r\n    {showUpdateButton &&<div style={{border:\"1px solid red\", marginBottom:\"5%\",width:\"400px\",height:\"300px\"}}>\r\n    <Button onClick={handleIssuePart} style={{width:\"50%\",height:\"50px\",position:\"relative\",top:\"132px\",left:\"106px\"}}>Add Part</Button>\r\n    </div>}\r\n    {/* //////////////////////////////////////////////// */}\r\n {!showUpdateButton && \r\n <PartScanner/>\r\n//    <Form\r\n// {...layout}\r\n// form={form}\r\n// name=\"control-hooks\"\r\n// onFinish={onFinish}\r\n// style={{ maxWidth: 600 }}\r\n// >\r\n\r\n// <Form.Item name=\"part_code\" onChange={handleItemCodeChange} label=\"Item Code\" rules={[{ required: true }]}>\r\n//   <Input/>\r\n// </Form.Item>\r\n// <Form.Item name=\"part_description\" label=\"Item Description\" rules={[{ required: true }]}>\r\n//   <Input/>\r\n// </Form.Item>\r\n// <Form.Item name=\"stock_balance\" label=\"Quantity\" rules={[{ required: true }]}>\r\n//   <Input type='number'/>\r\n// </Form.Item>\r\n// <Form.Item name=\"mechanic_name\" label=\"mechanic_name\" rules={[{ required: true }]}>\r\n//   <Select\r\n//     onChange={onMechanicChange}\r\n//     allowClear\r\n//     >\r\n//     {apiData.map(i=><Option value={i.id}>{i.mechanic_name}</Option> )}\r\n//   </Select>\r\n// </Form.Item>\r\n// <Form.Item name=\"for_machine\" label=\"Machine Number\" rules={[{ required: true }]}>\r\n// <Input/>\r\n// </Form.Item>\r\n\r\n\r\n// <Form.Item {...tailLayout}>\r\n//   <Button   type=\"primary\" htmlType=\"submit\">\r\n//     Update\r\n//   </Button>\r\n// </Form.Item>\r\n// </Form>\r\n}\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}