{"ast":null,"code":"import _slicedToArray from \"E:/adesh/Pardeep sir projects/machine-maintence/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\adesh\\\\Pardeep sir projects\\\\machine-maintence\\\\react-app\\\\src\\\\component\\\\pages\\\\qr\\\\scanner.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from 'antd';\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { scannerData, mechanic_name } from '../../redux/pageSlice';\nimport styles from './pageStyle.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Scanner = function Scanner() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    cameraStart = _useState2[0],\n    setCameraStart = _useState2[1];\n  var dispatch = useDispatch();\n  var designation_type = useSelector(function (state) {\n    return state.pageReducer.degination_type;\n  });\n  var navigate = useNavigate('');\n  var qrConfig = {\n    fps: 10,\n    qrbox: {\n      width: 300,\n      height: 300\n    }\n  };\n  var html5QrCode;\n  useEffect(function () {\n    html5QrCode = new Html5Qrcode(\"reader\");\n    getCameras();\n    var oldRegion = document.getElementById(\"qr-shaded-region\");\n    oldRegion && oldRegion.remove();\n  }, []);\n\n  // const handleClickAdvanced = () => {\n  //   console.log(html5QrCode,'ppppppppppppppppppppp'),\n  //   setCameraStart(true)\n  //   const qrCodeSuccessCallback = (decodedText, decodedResult) => {\n  //     let v= JSON.parse(JSON.stringify(decodedText));\n  //     const b = JSON.parse(v)\n  //           dispatch(scannerData(b));\n  //           console.log(designation_type,'innn qrcode page')\n  //           if(designation_type===\"Machanic\"){\n  //               navigate(\"/mechanic\", { replace: true });\n  //           }else{\n  //               navigate('/mechanic')\n  //           }  \n  //       handleStop();\n  //     };\n  //   html5QrCode\n  //     .start(\n\n  //       { facingMode: \"environment\" },\n  //        qrConfig,\n  //       qrCodeSuccessCallback\n  //     )\n  //     .then(() => {\n  //     });\n  // };\n\n  var handleClickAdvanced = function handleClickAdvanced() {\n    var qrCodeSuccessCallback = function qrCodeSuccessCallback(decodedText, decodedResult) {\n      console.info(decodedResult, decodedText);\n      var v = JSON.parse(JSON.stringify(decodedText));\n      var b = JSON.parse(v);\n      dispatch(scannerData(b));\n      handleStop();\n    };\n    html5QrCode.start({\n      facingMode: \"environment\"\n    }, qrConfig, qrCodeSuccessCallback).then(function () {\n      navigate('/mechanic');\n    });\n  };\n  var getCameras = function getCameras() {\n    Html5Qrcode.getCameras().then(function (devices) {\n      /**\r\n       * devices would be an array of objects of type:\r\n       * { id: \"id\", label: \"label\" }\r\n       */\n      console.info(devices);\n      if (devices && devices.length) {\n        // setCameraList(devices);\n        setActiveCamera(devices[0]);\n      }\n    }).catch(function (err) {\n      console.error(err);\n      // setCameraList([]);\n    });\n  };\n\n  var handleStop = function handleStop() {\n    try {\n      html5QrCode.stop().then(function (res) {\n        html5QrCode.clear();\n      }).catch(function (err) {\n        console.log(err.message);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"whitesmoke\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scan your qr code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, _this), !cameraStart ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: styles.qr_btn,\n        onClick: function onClick() {\n          return handleClickAdvanced();\n        },\n        children: \"scan machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, _this) : null, cameraStart ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: styles.qr_btn,\n        onClick: function onClick() {\n          return handleStop();\n        },\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, _this);\n};\n_s(Scanner, \"PM85TCDvS9AaHSqvcQllWXFU7EQ=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","Html5Qrcode","useNavigate","useSelector","useDispatch","scannerData","mechanic_name","styles","Scanner","cameraStart","setCameraStart","dispatch","designation_type","state","pageReducer","degination_type","navigate","qrConfig","fps","qrbox","width","height","html5QrCode","getCameras","oldRegion","document","getElementById","remove","handleClickAdvanced","qrCodeSuccessCallback","decodedText","decodedResult","console","info","v","JSON","parse","stringify","b","handleStop","start","facingMode","then","devices","length","setActiveCamera","catch","err","error","stop","res","clear","log","message","position","backgroundColor","textAlign","qr_btn"],"sources":["E:/adesh/Pardeep sir projects/machine-maintence/react-app/src/component/pages/qr/scanner.js"],"sourcesContent":["import React, {useEffect,useState,useRef} from \"react\";\r\nimport { Button } from 'antd';\r\nimport { Html5Qrcode } from \"html5-qrcode\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {scannerData,mechanic_name} from '../../redux/pageSlice'\r\nimport styles from './pageStyle.module.css'\r\nexport const Scanner = () => {\r\n  const[cameraStart,setCameraStart]=useState(false);\r\n    const dispatch = useDispatch();\r\n    const designation_type = useSelector(state=>state.pageReducer.degination_type)\r\n    const navigate = useNavigate('');\r\n    const qrConfig = { fps: 10, qrbox: { width: 300, height: 300 } };\r\n    let html5QrCode;\r\n\r\n    useEffect(() => {\r\n      html5QrCode = new Html5Qrcode(\"reader\");\r\n      getCameras();\r\n      const oldRegion = document.getElementById(\"qr-shaded-region\");\r\n      oldRegion && oldRegion.remove();\r\n    }, []);\r\n  \r\n    // const handleClickAdvanced = () => {\r\n    //   console.log(html5QrCode,'ppppppppppppppppppppp'),\r\n    //   setCameraStart(true)\r\n    //   const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n    //     let v= JSON.parse(JSON.stringify(decodedText));\r\n    //     const b = JSON.parse(v)\r\n    //           dispatch(scannerData(b));\r\n    //           console.log(designation_type,'innn qrcode page')\r\n    //           if(designation_type===\"Machanic\"){\r\n    //               navigate(\"/mechanic\", { replace: true });\r\n    //           }else{\r\n    //               navigate('/mechanic')\r\n    //           }  \r\n    //       handleStop();\r\n    //     };\r\n    //   html5QrCode\r\n    //     .start(\r\n         \r\n    //       { facingMode: \"environment\" },\r\n    //        qrConfig,\r\n    //       qrCodeSuccessCallback\r\n    //     )\r\n    //     .then(() => {\r\n    //     });\r\n    // };\r\n\r\n    const handleClickAdvanced = () => {\r\n      const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n        console.info(decodedResult, decodedText);\r\n       \r\n        let v= JSON.parse(JSON.stringify(decodedText));\r\n        const b = JSON.parse(v)\r\n              dispatch(scannerData(b));\r\n\r\n        handleStop();\r\n      };\r\n      html5QrCode\r\n        .start(\r\n          { facingMode: \"environment\" },\r\n         qrConfig,\r\n          qrCodeSuccessCallback\r\n        )\r\n        .then(() => {\r\n          navigate('/mechanic')\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    const getCameras = () => {\r\n      Html5Qrcode.getCameras()\r\n        .then((devices) => {\r\n          /**\r\n           * devices would be an array of objects of type:\r\n           * { id: \"id\", label: \"label\" }\r\n           */\r\n          console.info(devices);\r\n          if (devices && devices.length) {\r\n            // setCameraList(devices);\r\n            setActiveCamera(devices[0]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          // setCameraList([]);\r\n        });\r\n    };\r\n   \r\n    const handleStop = () => {\r\n      try {\r\n        html5QrCode\r\n          .stop()\r\n          .then((res) => {\r\n            html5QrCode.clear();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        <div id=\"reader\" width=\"100%\"></div>\r\n         <div style={{backgroundColor:\"whitesmoke\",textAlign:\"center\"}}>\r\n      <h1>Scan your qr code</h1>\r\n      {!cameraStart?<Button type='primary' className={styles.qr_btn} onClick={() => handleClickAdvanced()}>\r\n          scan machine\r\n        </Button>:null}\r\n       {cameraStart?\r\n       <Button type='primary' className={styles.qr_btn} onClick={() => handleStop()}>stop</Button>\r\n       :null}\r\n      \r\n        </div>\r\n      </div>\r\n    );\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}